/* It should be noted that this CSS styling was made with mobile first responsive design in mind. */

body {
    min-height: 100vh; /* This makes the body at least 100% height. */
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: beige;
}

header {
    text-align: left;
    padding: 10px 40px 10px;
    box-shadow: 5px 5px rgba(66, 66, 66, 0.301);
    color: white;
    background-color: darkblue;
}

header h1 {
    text-transform: uppercase;
}

/* Couple of functions here:
1) The body and .content-body are now a flexbox.
2) Flex value is set to 1 1 auto to allow it be shrinkable and extendable
3) Flex direction is set to column, so the elements "stack" on top of one another by default. This is important for the media query we will set up. */
body,
.content-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
}

article {
    flex: 1 1 auto; /* This makes the article element also shrinkable and extendable. */
    text-align: center;
    margin-top:25px;
    padding:10px 40px 10px;
    box-shadow: 5px 5px 5px rgba(66, 66, 66, 0.301);
    color: black;
    background-color: rgb(214, 214, 214);
}

.sidebar-left {
    order: -1; /* This orders the left sidebar to be before the content. While you can just hard code the order of the elements in the HTML, using order makes it more easy to adjust for different layouts.*/
    text-align: left;
    margin: 25px 25px 0px;
    padding-left: 20px;
    box-shadow: 5px 5px 5px rgba(66, 66, 66, 0.301);
    color: white;
    background-color: rgb(117, 18, 18);
}

.sidebar-right {
    text-align: right;
    margin: 25px 25px 0px;
    padding-right: 20px;
    box-shadow: 5px 5px 5px rgba(66, 66, 66, 0.301);
    color: white;
    background-color: rgb(0, 97, 16);
}

footer {
    text-align: center;
    margin-top: 10px;
    padding: 10px 40px 10px;
    color: white;
    background-color: rgb(139, 0, 97);
}

/* As stated in the beginning, the CSS styling currently is mobile first responsive. So we apply a media query to make it look a certain way for larger screens. */

/* This media query triggers once the minimum width is above 768px. */
@media (min-width:768px) {
    /* This changes the flex direction into a row instead of column, so the elements should now be displayed side to side. */
    .content-body {
        flex-direction: row;
    }

    /* This sets the sidebars at a certain size (the basis). Because there is no flex values added, they don't change in size when you change the screen size (when the width is above 768px). */
    aside {
        flex: 0 0 200px;
    }
}